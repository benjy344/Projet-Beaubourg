/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$icon-close-name: 'icon-close';
$icon-close-x: 410px;
$icon-close-y: 106px;
$icon-close-offset-x: -410px;
$icon-close-offset-y: -106px;
$icon-close-width: 50px;
$icon-close-height: 50px;
$icon-close-total-width: 473px;
$icon-close-total-height: 428px;
$icon-close-image: '../assets/sprite-main.png';
$icon-close: (410px, 106px, -410px, -106px, 50px, 50px, 473px, 428px, '../assets/sprite-main.png', 'icon-close', );
$icon-error-name: 'icon-error';
$icon-error-x: 410px;
$icon-error-y: 0px;
$icon-error-offset-x: -410px;
$icon-error-offset-y: 0px;
$icon-error-width: 63px;
$icon-error-height: 101px;
$icon-error-total-width: 473px;
$icon-error-total-height: 428px;
$icon-error-image: '../assets/sprite-main.png';
$icon-error: (410px, 0px, -410px, 0px, 63px, 101px, 473px, 428px, '../assets/sprite-main.png', 'icon-error', );
$icon-help-name: 'icon-help';
$icon-help-x: 410px;
$icon-help-y: 161px;
$icon-help-offset-x: -410px;
$icon-help-offset-y: -161px;
$icon-help-width: 40px;
$icon-help-height: 39px;
$icon-help-total-width: 473px;
$icon-help-total-height: 428px;
$icon-help-image: '../assets/sprite-main.png';
$icon-help: (410px, 161px, -410px, -161px, 40px, 39px, 473px, 428px, '../assets/sprite-main.png', 'icon-help', );
$icon-menu-name: 'icon-menu';
$icon-menu-x: 0px;
$icon-menu-y: 358px;
$icon-menu-offset-x: 0px;
$icon-menu-offset-y: -358px;
$icon-menu-width: 86px;
$icon-menu-height: 70px;
$icon-menu-total-width: 473px;
$icon-menu-total-height: 428px;
$icon-menu-image: '../assets/sprite-main.png';
$icon-menu: (0px, 358px, 0px, -358px, 86px, 70px, 473px, 428px, '../assets/sprite-main.png', 'icon-menu', );
$icon-next-name: 'icon-next';
$icon-next-x: 410px;
$icon-next-y: 205px;
$icon-next-offset-x: -410px;
$icon-next-offset-y: -205px;
$icon-next-width: 35px;
$icon-next-height: 40px;
$icon-next-total-width: 473px;
$icon-next-total-height: 428px;
$icon-next-image: '../assets/sprite-main.png';
$icon-next: (410px, 205px, -410px, -205px, 35px, 40px, 473px, 428px, '../assets/sprite-main.png', 'icon-next', );
$icon-return-name: 'icon-return';
$icon-return-x: 410px;
$icon-return-y: 250px;
$icon-return-offset-x: -410px;
$icon-return-offset-y: -250px;
$icon-return-width: 35px;
$icon-return-height: 40px;
$icon-return-total-width: 473px;
$icon-return-total-height: 428px;
$icon-return-image: '../assets/sprite-main.png';
$icon-return: (410px, 250px, -410px, -250px, 35px, 40px, 473px, 428px, '../assets/sprite-main.png', 'icon-return', );
$icon-tableau3-name: 'icon-tableau3';
$icon-tableau3-x: 155px;
$icon-tableau3-y: 203px;
$icon-tableau3-offset-x: -155px;
$icon-tableau3-offset-y: -203px;
$icon-tableau3-width: 200px;
$icon-tableau3-height: 103px;
$icon-tableau3-total-width: 473px;
$icon-tableau3-total-height: 428px;
$icon-tableau3-image: '../assets/sprite-main.png';
$icon-tableau3: (155px, 203px, -155px, -203px, 200px, 103px, 473px, 428px, '../assets/sprite-main.png', 'icon-tableau3', );
$icon-tableau4-name: 'icon-tableau4';
$icon-tableau4-x: 0px;
$icon-tableau4-y: 0px;
$icon-tableau4-offset-x: 0px;
$icon-tableau4-offset-y: 0px;
$icon-tableau4-width: 200px;
$icon-tableau4-height: 198px;
$icon-tableau4-total-width: 473px;
$icon-tableau4-total-height: 428px;
$icon-tableau4-image: '../assets/sprite-main.png';
$icon-tableau4: (0px, 0px, 0px, 0px, 200px, 198px, 473px, 428px, '../assets/sprite-main.png', 'icon-tableau4', );
$icon-tuto1-name: 'icon-tuto1';
$icon-tuto1-x: 0px;
$icon-tuto1-y: 203px;
$icon-tuto1-offset-x: 0px;
$icon-tuto1-offset-y: -203px;
$icon-tuto1-width: 150px;
$icon-tuto1-height: 150px;
$icon-tuto1-total-width: 473px;
$icon-tuto1-total-height: 428px;
$icon-tuto1-image: '../assets/sprite-main.png';
$icon-tuto1: (0px, 203px, 0px, -203px, 150px, 150px, 473px, 428px, '../assets/sprite-main.png', 'icon-tuto1', );
$icon-tuto2-name: 'icon-tuto2';
$icon-tuto2-x: 205px;
$icon-tuto2-y: 0px;
$icon-tuto2-offset-x: -205px;
$icon-tuto2-offset-y: 0px;
$icon-tuto2-width: 200px;
$icon-tuto2-height: 183px;
$icon-tuto2-total-width: 473px;
$icon-tuto2-total-height: 428px;
$icon-tuto2-image: '../assets/sprite-main.png';
$icon-tuto2: (205px, 0px, -205px, 0px, 200px, 183px, 473px, 428px, '../assets/sprite-main.png', 'icon-tuto2', );
$spritesheet-width: 473px;
$spritesheet-height: 428px;
$spritesheet-image: '../assets/sprite-main.png';
$spritesheet-sprites: ($icon-close, $icon-error, $icon-help, $icon-menu, $icon-next, $icon-return, $icon-tableau3, $icon-tableau4, $icon-tuto1, $icon-tuto2, );
$spritesheet: (473px, 428px, '../assets/sprite-main.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
